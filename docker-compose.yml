version: '3.8'

services:
  # Next.js Web Interface
  web:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "${WEB_PORT:-3000}:3000"
    environment:
      - NEXT_PUBLIC_API_URL=${NODE_API_URL:-http://localhost:3001}
      - NEXT_PUBLIC_WS_URL=${NODE_WS_URL:-ws://localhost:3001}
    depends_on:
      - node-api
    networks:
      - teleop-network

  # Node.js Backend API
  node-api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "${NODE_PORT:-3001}:3001"
    environment:
      - PORT=3001
      - MONGO_URI=${MONGO_URI:-mongodb://mongo:27017/teleop_db}
      - FLEET_API_URL=${FLEET_API_URL:-http://fleet-api:8000}
      - CORS_ORIGIN=${CORS_ORIGIN:-http://localhost:3000}
      - VX_MAX=${VX_MAX:-1.0}
      - VY_MAX=${VY_MAX:-1.0}
    depends_on:
      - mongo
      - fleet-api
    networks:
      - teleop-network

  # FastAPI Fleet Server
  fleet-api:
    build:
      context: ./fleet-server
      dockerfile: Dockerfile
    ports:
      - "${FLEET_PORT:-8000}:8000"
    environment:
      - PORT=8000
      - ZENOH_LOCATOR=${ZENOH_LOCATOR:-tcp/zenoh:7447}
      - Z_KEY_CMD_VEL=${Z_KEY_CMD_VEL:-rt/ros2/cmd_vel}
      - VX_MAX=${VX_MAX:-1.0}
      - VY_MAX=${VY_MAX:-1.0}
    depends_on:
      - zenoh
    networks:
      - teleop-network

  # MongoDB Database
  mongo:
    image: mongo:7
    ports:
      - "${MONGO_PORT:-27017}:27017"
    environment:
      - MONGO_INITDB_DATABASE=teleop_db
    volumes:
      - mongo_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
    networks:
      - teleop-network

  # Zenoh Router
  zenoh:
    image: eclipse/zenoh:latest
    ports:
      - "${ZENOH_PORT:-7447}:7447"
    command: ["zenohd", "--cfg", "/zenoh-config.json5"]
    volumes:
      - ./zenoh-config.json5:/zenoh-config.json5:ro
    networks:
      - teleop-network

  # Zenoh to ROS2 Bridge
  bridge:
    image: eclipse/zenoh-bridge-ros2dds:latest
    environment:
      - ROS_DOMAIN_ID=${ROS_DOMAIN_ID:-0}
      - ZENOH_ROUTER=${ZENOH_LOCATOR:-tcp/zenoh:7447}
    depends_on:
      - zenoh
    networks:
      - teleop-network
      - ros2-network

  # ROS2 Robot Node (Optional)
  robot:
    build:
      context: ./robot
      dockerfile: Dockerfile
    environment:
      - ROS_DOMAIN_ID=${ROS_DOMAIN_ID:-0}
    depends_on:
      - bridge
    networks:
      - ros2-network
    profiles:
      - robot

volumes:
  mongo_data:

networks:
  teleop-network:
    driver: bridge
  ros2-network:
    driver: bridge